map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}
    
server {
    listen       80 default_server;
    server_name  #mettere nome dominio;

    return 301 https://$host$request_uri;

}

server {
    listen [::]:443 ssl http2;
    listen      443 ssl http2;
    server_name #mettere nome dominio;
    ssl_certificate /etc/letsencrypt/live/#mettere nome dominio/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/#mettere nome dominio/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNUL$;
    ssl_session_cache shared:TLS:2m;  
    ssl_buffer_size 4k;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; 
  
    location / {
        proxy_pass http://ip-hassio:8123;
        proxy_set_header Host $host;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
        location /api/websocket {
        proxy_pass http://ip-hassio:8123/api/websocket;
        proxy_set_header Host $host;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

    }
}
